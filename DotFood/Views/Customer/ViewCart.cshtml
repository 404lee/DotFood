@using DotFood.Entity
@model List<Cart>

@{
    ViewData["Title"] = "View Cart";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="div1">
    <h3 class="h3 title-font">My Cart</h3>

    @if (!Model.Any())
    {
        <h4 class="text-center title-font">My cart is empty!</h4>
    }
    else
    {
        <form method="post" action="/Customer/PlaceOrder">
            <table class="styled-table">
                <thead>
                    <tr>
                        <th>Product</th>
                        <th>Unit Price</th>
                        <th>Quantity</th>
                        <th>Total Price</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.Count; i++)
                    {
                        <tr>
                            <td>
                                <input type="hidden" name="CartItems[@i].Id" value="@Model[i].Id" />
                                @Model[i].Product.Name
                            </td>
                            <td>@Model[i].Product.Price.ToString("C")</td>
                            <td>
                                <div class="quantity-group">
                                    <input type="hidden" name="CartItems[@i].ProductId" value="@Model[i].ProductId" />
                                    <button type="button" class="btn-circle" onclick="decrementQuantity(@i, @Model[i].Product.Quantity)">-</button>
                                    <input type="number"
                                           id="quantity-@i"
                                           name="CartItems[@i].Quantity"
                                           value="@Model[i].Quantity"
                                           min="1"
                                           max="@Model[i].Product.Quantity"
                                           class="qty-input" />
                                    <button type="button" class="btn-circle" onclick="incrementQuantity(@i, @Model[i].Product.Quantity)">+</button>
                                </div>
                            </td>
                            <td>
                                <input type="text"
                                       id="totalPrice-@i"
                                       value="@($"{Model[i].Product.Price * Model[i].Quantity:0.00}")"
                                       class="price-input"
                                       readonly
                                       data-unit-price="@Model[i].Product.Price" />
                            </td>
                            <td>
                                <button type="button" class="btn-remove" onclick="removeFromCart(@Model[i].ProductId)">
                                    Remove
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            <div class="text-end mt-3">
                <h4 id="grandTotal" class="text-end">Grand Total:@Model.Sum(c => c.Product.Price * c.Quantity).ToString("C")</h4>
                <form asp-action="OrderConfirmation" asp-route-id="@Model.FirstOrDefault()?.Id" method="post">
                    <button type="submit" class="btn-checkout">CheckOut</button>
                </form>
            </div>
        </form>
    }
</div>

@section Scripts {
    <script>
        function incrementQuantity(index, maxQuantity) {
            var quantityInput = document.getElementById("quantity-" + index);
            var totalPriceInput = document.getElementById("totalPrice-" + index);
            var currentQuantity = parseInt(quantityInput.value);
            if (currentQuantity < maxQuantity) {
                quantityInput.value = ++currentQuantity;
                updateRowTotal(index);
            }
        }

        function decrementQuantity(index) {
            var quantityInput = document.getElementById("quantity-" + index);
            var totalPriceInput = document.getElementById("totalPrice-" + index);
            var currentQuantity = parseInt(quantityInput.value);
            if (currentQuantity > 1) {
                quantityInput.value = --currentQuantity;
                updateRowTotal(index);
            }
        }

        function updateRowTotal(index) {
            var quantityInput = document.getElementById("quantity-" + index);
            var unitPrice = parseFloat(document.getElementById("totalPrice-" + index).getAttribute("data-unit-price"));
            var total = unitPrice * parseInt(quantityInput.value);
            document.getElementById("totalPrice-" + index).value = total.toFixed(2);
            updateGrandTotal();
        }

        function updateGrandTotal() {
            var total = 0;
            var totalInputs = document.querySelectorAll('[id^="totalPrice-"]');
            totalInputs.forEach(i => total += parseFloat(i.value));
            document.getElementById('grandTotal').innerText = "Grand Total: $" + total.toFixed(2);
        }

        function removeFromCart(productId) {
            var form = document.createElement('form');
            form.method = 'POST';
            form.action = '/Customer/RemoveFromCart';
            var input = document.createElement('input');
            input.type = 'hidden';
            input.name = 'productId';
            input.value = productId;
            form.appendChild(input);
            document.body.appendChild(form);
            form.submit();
        }
    </script>
}

<style>
    body {
        background-color: #FEF3E2;
        background-image: url('/Images/Bg1.png');
        background-size: cover;
        background-repeat: no-repeat;
        background-attachment: fixed;
        font-family: Arial, sans-serif;
        color: #333;
    }

    .h3 {
        text-align: center;
        color: #FA812F;
        font-weight: bold;
        margin-bottom: 20px;
    }

    .title-font{
        font-family: "hobo-std";
    }

    .div1 {
        margin: 40px auto;
        width: 90%;
        max-width: 1000px;
        background-color: rgba(254, 243, 226, 0.95);
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .styled-table {
        width: 100%;
        border-collapse: collapse;
        font-size: 16px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.05);
        background-color: white;
        margin-bottom: 20px;
    }

        .styled-table thead tr {
            background-color: #FA812F;
            color: floralwhite;
            text-align: center;
            font-weight: bold;
        }

        .styled-table th,
        .styled-table td {
            padding: 12px 15px;
            border: 1px solid #FFB22C;
            text-align: center;
        }

        .styled-table tbody tr:hover {
            background-color: #FFE1B2;
        }

    .quantity-group {
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .qty-input {
        width: 60px;
        text-align: center;
        margin: 0 5px;
        border: 1px solid #ccc;
        border-radius: 5px;
        padding: 5px;
    }

    .btn-circle {
        border: none;
        background-color: #FFB22C;
        color: white;
        width: 30px;
        height: 30px;
        font-weight: bold;
        border-radius: 50%;
        transition: 0.2s;
    }

        .btn-circle:hover {
            background-color: #FA812F;
        }

    .price-input {
        width: 80px;
        text-align: center;
        border: none;
        background-color: transparent;
        font-weight: bold;
    }

    .btn-remove {
        background-color: #FA812F;
        color: white;
        border: none;
        padding: 6px 12px;
        border-radius: 5px;
        transition: 0.2s;
    }

        .btn-remove:hover {
            background-color: #D95E1C;
        }

    .btn-checkout {
        background-color: #28a745;
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 6px;
        font-weight: bold;
        transition: background-color 0.3s;
    }

        .btn-checkout:hover {
            background-color: #218838;
        }
</style>
